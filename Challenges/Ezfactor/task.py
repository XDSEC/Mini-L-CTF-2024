from sage.all import *
from Crypto.Util.number import *
from Crypto.Util.Padding import pad
from Crypto.Cipher import AES
from sercret import p,q,x1,y1,x2,y2,flag


e = 107851261855564315073903829182423950546788346138259394246439657948476619948171
n = 1612520630363003059353142253089981533043311564255746310310940263864745479492015266264329953981958844235674179099410756219312942121244956701500870363219075525408783798007163550423573845701695879459236385567459569561236623909034945892869546441146006017614916909993115637827270568507869830024659905586004136946481048074461682125996261736024637375095977789425181258537482384460658359276300923155102288360474915802803118320144780824862629986882661190674127696656788827

assert x1**2 + e*y1**2 == n
assert x2**2 + e*y2**2 == n
assert x1 != x2 and y1 != y2
assert p.bit_length() == q.bit_length() == 768
assert p*q == n


key = long_to_bytes(x1+x2+y1+y2)[:16]
iv = long_to_bytes((x1^x2)+(y1^y2))[:16]
cipher = AES.new(key,AES.MODE_CBC,iv)
Flag = cipher.encrypt(pad(flag,16)).hex()
gift = p>>360
print(Flag)
print(gift)
print(e)


'''
725039090b61b83a729d1e1061de62f0aae6b3c13aa601e2302b88393a910086497ccb4ef1e8d588a0fffe1e7b2ac46e
484571358830397929370234740984952703033447536470079158146615136255872598113610957918395761289775053764210538009624146851126
107851261855564315073903829182423950546788346138259394246439657948476619948171
'''